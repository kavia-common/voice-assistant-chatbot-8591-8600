{"is_source_file": true, "format": "Python", "description": "This file implements speech-to-text (STT) functionality, providing methods to transcribe audio data using either CMU Sphinx (offline) or Google Web Speech API, depending on configuration and availability. It includes internal helper functions for recognition and a public interface for processing audio bytes.", "external_files": ["io", "time", "django.conf.settings"], "external_methods": ["speech_recognition.Recognizer", "speech_recognition.AudioData", "speech_recognition.recognize_sphinx", "speech_recognition.recognize_google"], "published": ["transcribe_file"], "classes": [], "methods": [{"name": "Optional[str] _recognize_with_sphinx(recognizer: sr.Recognizer, audio: sr.AudioData, language: Optional[str])", "description": "Attempts to recognize speech from audio using the offline CMU Sphinx engine, returning None if recognition is not possible.", "scope": "", "scopeKind": ""}, {"name": "str _recognize_with_google(recognizer: sr.Recognizer, audio: sr.AudioData, language: Optional[str])", "description": "Uses Google Web Speech API to recognize speech from audio data, with optional language parameter.", "scope": "", "scopeKind": ""}, {"name": "Dict[str,Any] transcribe_file(file_bytes: bytes, language: Optional[str] = None)", "description": "Main public function that transcribes input audio bytes into text, choosing the recognition engine based on settings and availability, and returning recognition results with metadata.", "scope": "", "scopeKind": ""}], "calls": ["speech_recognition.Recognizer()", "speech_recognition.AudioFile()", "recognizer.record()", "_recognize_with_sphinx()", "_recognize_with_google()"], "search-terms": ["speech recognition", "STT", "pocketsphinx", "recognize_google", "transcribe"], "state": 2, "file_id": 20, "knowledge_revision": 58, "git_revision": "124e100569935b847819df3d9eab527c99b0086c", "revision_history": [{"41": ""}, {"57": "124e100569935b847819df3d9eab527c99b0086c"}, {"58": "124e100569935b847819df3d9eab527c99b0086c"}], "ctags": [{"_type": "tag", "name": "_recognize_with_google", "path": "/home/kavia/workspace/code-generation/voice-assistant-chatbot-8591-8600/voice_chatbot_backend/api/services/stt.py", "pattern": "/^def _recognize_with_google(recognizer: sr.Recognizer, audio: sr.AudioData, language: Optional[st/", "language": "Python", "typeref": "typename:str", "kind": "function", "signature": "(recognizer: sr.Recognizer, audio: sr.AudioData, language: Optional[str])"}, {"_type": "tag", "name": "_recognize_with_sphinx", "path": "/home/kavia/workspace/code-generation/voice-assistant-chatbot-8591-8600/voice_chatbot_backend/api/services/stt.py", "pattern": "/^def _recognize_with_sphinx(recognizer: sr.Recognizer, audio: sr.AudioData, language: Optional[st/", "language": "Python", "typeref": "typename:Optional[str]", "kind": "function", "signature": "(recognizer: sr.Recognizer, audio: sr.AudioData, language: Optional[str])"}, {"_type": "tag", "name": "sr", "path": "/home/kavia/workspace/code-generation/voice-assistant-chatbot-8591-8600/voice_chatbot_backend/api/services/stt.py", "pattern": "/^    import speech_recognition as sr  # type: ignore$/", "language": "Python", "kind": "namespace", "nameref": "module:speech_recognition"}, {"_type": "tag", "name": "sr", "path": "/home/kavia/workspace/code-generation/voice-assistant-chatbot-8591-8600/voice_chatbot_backend/api/services/stt.py", "pattern": "/^    sr = None  # type: ignore$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "transcribe_file", "path": "/home/kavia/workspace/code-generation/voice-assistant-chatbot-8591-8600/voice_chatbot_backend/api/services/stt.py", "pattern": "/^def transcribe_file(file_bytes: bytes, language: Optional[str] = None) -> Dict[str, Any]:$/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "function", "signature": "(file_bytes: bytes, language: Optional[str] = None)"}], "hash": "ef415675d3a5ac40d3fa99cbf337b65e", "format-version": 4, "code-base-name": "voice_chatbot_backend", "filename": "voice_chatbot_backend/api/services/stt.py", "fields": [{"name": "sr = None  # type: ignore", "scope": "", "scopeKind": "", "description": "unavailable"}]}