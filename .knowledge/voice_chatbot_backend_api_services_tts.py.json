{"is_source_file": true, "format": "Python", "description": "This file provides a speech synthesis utility for a voice assistant backend, implementing functions to convert text into speech audio formats using different engines (pyttsx3 and gTTS), with fallback mechanisms and configuration via Django settings.", "external_files": ["django.conf.settings", "pyttsx3", "gtts"], "external_methods": ["pyttsx3.init", "pyttsx3.getProperty", "pyttsx3.setProperty", "pyttsx3.save_to_file", "pyttsx3.runAndWait", "gtts.gTTS", "io.BytesIO"], "published": ["synthesize_speech"], "classes": [], "methods": [{"name": "Optional[Tuple[bytes,str]] _try_pyttsx3(text: str, voice: Optional[str] = None)", "description": "Attempts to synthesize speech to WAV format using pyttsx3, returning audio bytes and MIME type on success.", "scope": "", "scopeKind": ""}, {"name": "Optional[Tuple[bytes,str]] _try_gtts(text: str, lang: str = \"en\")", "description": "Attempts to synthesize speech to MP3 format using gTTS, returning audio bytes and MIME type on success.", "scope": "", "scopeKind": ""}, {"name": "Tuple[Optional[bytes],str,str] synthesize_speech(text: str, voice: Optional[str] = None, engine: Optional[str] = None)", "description": "Main public interface that synthesizes text into speech, choosing among engines and providing fallback options.", "scope": "", "scopeKind": ""}], "calls": ["pyttsx3.init", "pyttsx3.getProperty", "pyttsx3.setProperty", "pyttsx3.save_to_file", "pyttsx3.runAndWait", "gtts.gTTS", "io.BytesIO", "os.remove"], "search-terms": ["speech synthesis", "pyttsx3", "gtts", "text to speech", "fallback", "Django settings", "audio format"], "state": 2, "file_id": 23, "knowledge_revision": 59, "git_revision": "124e100569935b847819df3d9eab527c99b0086c", "revision_history": [{"47": ""}, {"55": "124e100569935b847819df3d9eab527c99b0086c"}, {"59": "124e100569935b847819df3d9eab527c99b0086c"}], "ctags": [{"_type": "tag", "name": "_try_gtts", "path": "/home/kavia/workspace/code-generation/voice-assistant-chatbot-8591-8600/voice_chatbot_backend/api/services/tts.py", "pattern": "/^def _try_gtts(text: str, lang: str = \"en\") -> Optional[Tuple[bytes, str]]:$/", "language": "Python", "typeref": "typename:Optional[Tuple[bytes,str]]", "kind": "function", "signature": "(text: str, lang: str = \"en\")"}, {"_type": "tag", "name": "_try_pyttsx3", "path": "/home/kavia/workspace/code-generation/voice-assistant-chatbot-8591-8600/voice_chatbot_backend/api/services/tts.py", "pattern": "/^def _try_pyttsx3(text: str, voice: Optional[str] = None) -> Optional[Tuple[bytes, str]]:$/", "language": "Python", "typeref": "typename:Optional[Tuple[bytes,str]]", "kind": "function", "signature": "(text: str, voice: Optional[str] = None)"}, {"_type": "tag", "name": "synthesize_speech", "path": "/home/kavia/workspace/code-generation/voice-assistant-chatbot-8591-8600/voice_chatbot_backend/api/services/tts.py", "pattern": "/^def synthesize_speech(text: str, voice: Optional[str] = None, engine: Optional[str] = None) -> T/", "language": "Python", "typeref": "typename:Tuple[Optional[bytes],str,str]", "kind": "function", "signature": "(text: str, voice: Optional[str] = None, engine: Optional[str] = None)"}], "hash": "0cbe251e997e18476beceac777d849fa", "format-version": 4, "code-base-name": "voice_chatbot_backend", "filename": "voice_chatbot_backend/api/services/tts.py"}